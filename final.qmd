---
title: "Project: Analyzing World Happiness and GDP per Capita  "
author: ["Suhanth Alluri", "Brian Mai", "Zaid Ruiz", "Maxwell Silver"]
format: 
  html:
    code-fold: true
toc: true
embed-resources: true
code-tools: true
bibliography: citations.bib
execute:
  echo: true
  message: false
  warning: false
  error: true
---

## The Data




```{r}
library(tidyverse)
library(knitr)
library(patchwork)
library(gganimate)
library(gifski)
library(broom)
library(purrr)
library(kableExtra)
```


## Introduction

### Overview
Does money buy happiness? This is a question we were all asking ourselves, so we chose to explore the relationship between GDP per Capita and Happiness Score.

### Hypothesis
According to [Forbes](https://www.forbes.com/sites/johnjennings/2024/02/12/money-buys-happiness-after-all/), it seems like people's happiness, which seemed to increase up until a $75,000 salary is reached, may actually still be improved even after reaching an income above this perceieved threshold, thus proving that someone's happiness is strongly infuenced by their income.  

Our hypothesis is that there is a strong positive correlation between happiness and GDP per capita. We expect that as GDP per capita increases, happiness score will also increase.

### Data Descriptions

#### Happiness Dataset

This dataset was found on Gapminder ()

It provides happiness score data for several countries across the years 2005 to 2023. The observational unit for this dataset is the year.

The happiness score is determined from the national average response to the question of life evaluations asking the following:

> "Please imagine a ladder, with steps numbered from 0 at the bottom to 10 at the top. The top of the ladder represents the best possible life for you and the bottom of the ladder represents the worst possible life for you. On which step of the ladder would you say you personally feel you stand at this time?" 

This measure is also referred to as Cantril Life Ladder @inc_understanding_2009
. Gapminder has converted this indicator's scale from 0 to 100 to easily communicate it in terms of percentage (<<<<).


```{r}
happiness_score <- read_csv("hapiscore_whr.csv")
```

#### GDP Per Capita Data

This dataset provides GDP per capita data for several countries across the years 1800 to 2100. The future years' values are projceted GDP per capita values. The observational unit for this dataset is also the year.

GDP per capita measures the value of everything produced in a country during a year, divided by the number of people. The unit is constant dollars adjusted for inflation in 2017's prices. As the cost of living varies across countries, we use a currency called "international dollars", which are adjusted for Purchasing Power Parity (PPP). International dollars are approximately equal to U.S. Dollars.

```{r}
gdp_per_capita <- read_csv("gdp_pcap.csv")
```


### Data Cleaning

Our data contained multiple inconsistencies that we had to normalize. 

We found that, some rows in both datasets contain NA values, but we wanted to retain them in our clean datasets. If one variable is missing but the other is present, we choose to keep the row to allow us to analyze the trend of the variable with available data. If both variables are missing, we still retain the row to clearly indicate that the values are missing for that particular year. We decided that if a column contained more than 80% NA values, then we would drop that column from our dataset.

We first started off by cleaning the Happiness data set. The table below illustrates all columns of the Happiness dataset, and whether or not over 80% of that column's values are NA.

```{r}
happiness_score |>
  summarise(across(everything(), ~ mean(is.na(.)) > 0.80)) |>
  pivot_longer(
    cols = everything(),
    names_to = "column",
    values_to = "NA_more_80_percent") |>
    mutate(NA_more_80_percent = ifelse( # https://stackoverflow.com/questions/60782273/cell-spec-for-conditional-cells
      NA_more_80_percent, 
      cell_spec("TRUE", color = "red", bold = TRUE), 
      "FALSE"
    )) |>
  kable(col.names = c("Column Name", "Over 80% of row values NA"), caption = "Happiness Dataset", escape = FALSE)
```

We found that the 2005 column was the one that only row with more than 80% of its values equal to NA. All other columns were below this threshold.

To clean the data, we simply removed the 2005 column as it does not add many observations to our data.
```{r}
happiness_score_clean <- happiness_score |>
  select(country, `2006`:`2023`)
```

We conducted the same check on the GDP per Capita dataset and found that none of its columns had over 80% NA values. Therefore, we did not remove any columns from the GDP dataset.
```{r}
#| eval: False

gdp_per_capita |>
  summarise(across(everything(), ~ mean(is.na(.)) > 0.80)) |>
  pivot_longer(
    cols = everything(),
    names_to = "column",
    values_to = "NA_more_80_percent") |>
    mutate(NA_more_80_percent = ifelse( # https://stackoverflow.com/questions/60782273/cell-spec-for-conditional-cells
      NA_more_80_percent, 
      cell_spec("TRUE", color = "red", bold = TRUE), 
      "FALSE"
    )) |>
  kable(col.names = c("Column Name", "Over 80% of row values NA"), caption = "GDP per Capita Dataset", escape = FALSE)
```

We also noticed that in the GDP per capita data, some year columns had character data types since their values appended 'k' to denote thousands  (e.g., '24.5k' for 24,500). We cleaned this dataset by converting all such values to their exact numeric form, ensuring all data is now in a numeric data type. This allows us to do computations with the GDP per capita data more easily.
```{r}
gdp_per_capita_clean <- gdp_per_capita |>
  mutate(across(`1800`:`2100`, ~ as.numeric(str_replace_all(., "k", "e3"))))
```


Next, we pivoted both datasets longer, so that each country has a row for each year and variable value. Lastly, we joined the pivoted datasets together on Country and Year.

```{r}
happiness_score_clean <- happiness_score_clean |>
  pivot_longer(
    cols = `2006`:`2023`,
    names_to = "year",
    values_to = "happiness_score")

gdp_per_capita_clean <- gdp_per_capita_clean |>
  pivot_longer(
    cols = `1800`:`2100`,
    names_to = "year",
    values_to = "gdp_per_capita")

merged_data <- left_join(happiness_score_clean, gdp_per_capita_clean, by = c("country", "year"))
```


## Visualizing the Relationship

We first computed the average happiness score and GDP per capita values acoss all years for each country. 

The scatterplot below shows the relationship between average GDP per capita and average happiness score for each country for all years.

```{r}
lm_data <- merged_data |> 
  #average happiness score across all years
  group_by(country) |> 
  summarise(avgHappiness = mean(happiness_score, na.rm = TRUE),
            avgGDP = mean(gdp_per_capita, na.rm = TRUE)) 
  
plot2_1 <- lm_data |>
  ggplot(mapping = aes(x = avgGDP, y = avgHappiness)) +
  geom_point() +
  labs(
    x = "GDP Per Capita (Intl. Dollar)",
    y = "",
    title = "Happiness v. GDP per Capita",
    subtitle = "Happiness Score",
  ) + 
  theme_minimal()

plot2_1
```
From this plot we can see that there is a moderate positive relationship between the per capita GDP and happiness score. The majority of the data is clustered around the 0 to 30000 Intl. Dollar GDP per capita areas with around a 50 happiness score.

This plot is lacking in that it does not show how these trends could have evolved over time. To that end, we created a second visualization, containing the same data, but creating a separate plot for each year.

Below shows the relationship between average GDP per capita and average happiness for each year. It displays a plot for each year from 2006 to 2023. 

```{r}
#| eval: False

animated_plot <- ggplot(merged_data, aes(x = gdp_per_capita, y = happiness_score)) +
  geom_point(alpha = 0.7) +
  labs(
    x = "GDP Per Capita (Intl. Dollar)",
    y = NULL,
    title = "Happiness vs. GDP Per Capita -- {closest_state}",
    subtitle = "Happiness Score"
  ) +
  theme_minimal() +
  transition_states(year, transition_length = 16, state_length = 1)
  ease_aes("linear")

animated_gif <- animate(animated_plot, renderer = gifski_renderer(), width = 1000, height = 600, fps = 4, duration = 4)

anim_save("happiness_vs_gdp.gif", animation = animated_gif)
```
![Happiness vs. GDP Per Capita Over Time](happiness_vs_gdp.gif)
We can see that the general relationship of the variables is similar across the years with the majority of points in the 0 to 30000 Intl. Dollar range and lying around the 50 happiness score. Some years have more spread in their points while other years have more clustered fit, but there is not a clear change in the relationship over time.


## Linear Regression

To take a deeper look at the relationship between GDP per capita and happiness score, we fit the data to a linear regression model. Linear regression is a model where we fit our data to a linear equation of the format $response = intercept + slope \times explanatory + noise$. This will result in a line to represent the dataset and help us predict happiness score values with a GDP per capita value. For this model, we first took the average happiness score and GDP per capita values acoss all years for each country.

Below is a table containing the coefficients of our fitted linear model.

```{r}
happiness_gdp_lm <- lm(avgHappiness ~ avgGDP, 
                 data = lm_data)

tidy(happiness_gdp_lm) |> 
  kable()
```
The intercept value of 46.05 represents the expected happiness score when GDP per capita is 0. The slope of 0.000402 means that for every 1000 international dollar increase in GDP per capita the happiness score increases by about half a point.

$$
\hat{y} = 46.05 + 0.000402 \cdot \text{GDP per Capita}
$$

We overlayed our fitted linear regression model to visualize how well it fits the datapoints, as can be seen below.
```{r}
p1 <- ggplot(lm_data, mapping = aes(x = avgGDP, y = avgHappiness)) +
  geom_point() +
  xlim(0, 60000) +
  ylim(30, 80) +  
  geom_jitter() + 
  geom_smooth(method = "lm") +
  labs(
    x = "GDP Per Capita (Intl. Dollar)",
    y = "",
    title = "Happiness v. GDP per Capita",
    subtitle = "Happiness Score",
  ) + 
  theme_minimal()

p1
```

The linear regression model does illustrate the positive correlation trend between the two variables, although there is still a fair bit of variance between a lot of the points and the line.

### Model Fit

Beyond just observing the plot visually, we computed the variances between the model and the actual data. The table below contains the response, fitted, and residual variances.

```{r}


model_data <- augment(happiness_gdp_lm)

#Compute SpecifiedVariances
response_variance <- var(model_data$avgHappiness, na.rm = TRUE)
fitted_variance <- var(model_data$.fitted, na.rm = TRUE)
residual_variance <- var(model_data$.resid, na.rm = TRUE)

var_types <- c(
  "Response" = response_variance,
  "Fitted" = fitted_variance,
  "Residual" = residual_variance
)

var_table <- enframe(var_types, "Variance Type", "Value") 

var_table |> 
  kable(col.names = c("Variance Type", "Value"),
        caption = "Computed Variances of Linear Regression Model") |>
  kable_styling(full_width = F,
                bootstrap_options = "striped") |> 
  row_spec(row = 0, bold = T, align = "c")
```

The proportion of the variability in the response values that was accounted for by our regression model is given by the Multiple R-squared from the summary of our model, which is 0.5392. R-squared is calculated as the proportion of variance of fitted values over response values, which also results in the same value given the table above (0.5392 = 62.85/116.55). This R-squared value states that around 53.92% of the variance in happiness scores is explained by GDP per Capita. Although GDP per capita seems to be a strong predictor of happiness, the remaining 46.08% of the variance is unexplained, suggesting that there are other factors outside of financial metrics that affect the happiness of an individual.

## 3 Simulation

In this section, we examine how well our linear regression model captures the relationship between GDP per capita and happiness scores by simulating data and comparing it to our observed data.

### 3.1 Visualizing Simulations from the Model

We first generate predictions from our regression model, then add random noise based on the estimated residual standard error to create simulated happiness scores.

```{r}
#| layout-ncol: 2

# na.omit() from
# https://stackoverflow.com/questions/4862178/remove-rows-with-all-or-some-nas-missing-values-in-data-frame

pred_happiness <- predict(happiness_gdp_lm)

sigma_val <- sigma(happiness_gdp_lm)

rand_error <- function(x, mean = 0, sd){
  x + rnorm(length(x), 
          mean, 
          sd)
}

simulated_happiness <- tibble(sim_happiness = rand_error(pred_happiness,
                                                         sd = sigma_val))

full_data <- lm_data |> 
  na.omit() |>
  select(country, avgGDP, avgHappiness) |> 
  bind_cols(simulated_happiness)


full_data_long <- full_data |> 
  pivot_longer(cols = c(avgHappiness, sim_happiness), 
               names_to = "happiness_type", 
               values_to = "happiness_score")

ggplot(full_data_long, aes(x = avgGDP, y = happiness_score)) +
  geom_point() +
  facet_wrap(vars(happiness_type), 
             labeller = as_labeller(c(avgHappiness = "Observed Happiness", 
                                      sim_happiness = "Simulated Happiness"))) +
  labs(
    x = "GDP Per Capita (Intl. Dollar)",
    y = "Happiness Score",
    title = "Observed and Simulated Happiness v. GDP per Capita"
  ) +
  theme_minimal()

```

The side-by-side plots show the relationship between GDP per capita and happiness scores for both our observed data (left) and a simulated dataset (right). In both datasets, they show a positive relationship, reflecting the fact that countries with higher GDP per capita tend to report higher happiness scores. In both plots, the data seems to be clustered around the 40 to 50 happiness score range at lower GDP per capita values, and become more spread as GDP per capita increases. However we can see that the points have a similar general shape.

### 3.2 Generating Multiple Predictive Checks

```{r}
set.seed(4)

sim_and_r_square <- function(observed_data, observed_lm){
    
  pred_happiness <- predict(observed_lm)
  
  sigma_val <- sigma(observed_lm)
  
  simulated_happiness <- tibble(sim_happiness = rand_error(pred_happiness,
                                                           sd = sigma_val))
  
  full_data <- observed_data |> 
    na.omit() |>
    select(country, avgGDP, avgHappiness) |> 
    bind_cols(simulated_happiness)
  
  lm_obj <- lm(avgHappiness ~ sim_happiness, data = full_data) |>
    glance()
  
  return(lm_obj$r.squared)
    
}

sim_r_square <- map_dbl(.x = 1:1000,
                     .f = ~ sim_and_r_square(lm_data, happiness_gdp_lm))

sim_r_squared_df <- enframe(sim_r_square, value = "r_squared") 

sim_r_squared_df |>
  ggplot(aes(x = r_squared)) +
  geom_histogram(bins = 10, color = "steelblue", fill="lightblue") +
    labs(x = "R-Squared Values",
         y = "Frequency",
         title = "Distribution of R-Squared Values",
         subtitle = "From 1000 simulated regressions")

```


  From this plot of the distribution we can see that the majority of the R-squared values from the simulated datasets fall between 0.3 and 0.45 indicating that the linear regression provides a subpar fit to model the relationship between GDP per capita and Happiness score.